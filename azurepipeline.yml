trigger:
  branches:
    include:
      - "*"
pr:
  branches:
    include:
    - "*"

jobs:
- job: Build
  pool:
    vmImage: ubuntu-18.04

  variables:
    DIFF_COVER_CHECK_THRESHOLD: 50
    DIFF_COVER_ENABLE: 'true'
    DIFF_COVER_WORKING_DIRECTORY: $(System.DefaultWorkingDirectory)

  steps:
    - checkout: self
      clean: true

    - script: |
        set -ex
        ./build.sh
        docker run -d --rm -p8090:8090 -p6379:6379 --name rest-api --cap-add NET_ADMIN --privileged -t rest-api-image-test_local:latest
        docker save rest-api-image-test_local | gzip > rest-api-image-test_local.gz
        docker save rest-api-build-image | gzip > rest-api-build-image.gz
        cp *.gz $(Build.ArtifactStagingDirectory)
        mkdir $(Build.ArtifactStagingDirectory)/debs
        cp debs/*.deb $(Build.ArtifactStagingDirectory)/debs
        cp debian/sonic-rest-api/usr/sbin/go-server-server $(Build.ArtifactStagingDirectory)
      displayName: 'Build image'

    - script: |
        set -ex
        pip install requests
        pip install redis
        pip install -U pytest
        cd test
        pytest -v
        docker exec rest-api cat /tmp/rest-api.err.log
        docker exec rest-api ps aux
        sleep 600
        cd ..
        docker cp rest-api:/coverage.cov ./
        docker run -d --rm=true --name rest-api_build -v /tmp/target:/src -v $(pwd):/src/rest -w /src/rest rest-api-build-image tail -f /dev/null
        mkdir htmlcov
        docker exec rest-api_build sh /src/rest/cover.sh
      displayName: Test

    - publish: $(Build.ArtifactStagingDirectory)/
      artifact: 'sonic-restapi'
      displayName: "Archive artifacts"

    - script: |
        set -ex
        # Install .NET CORE
        curl -sSL https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        sudo apt-add-repository https://packages.microsoft.com/ubuntu/18.04/prod
        sudo apt-get update
        sudo apt-get install -y dotnet-sdk-5.0
      displayName: "Install .NET CORE"

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage.xml'
        reportDirectory: '$(System.DefaultWorkingDirectory)/htmlcov/'
      displayName: 'Publish test coverage'
